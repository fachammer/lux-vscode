trigger:
- master

variables:
  RELATIVE_CACHE_FOLDER: node_modules
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/$(RELATIVE_CACHE_FOLDER)

stages:
  - stage: build_test
    displayName: Build and Test
    jobs:
      - job: build_test
        displayName: Build and Test 
        strategy:
          matrix:
            linux:
              imageName: 'ubuntu-16.04'
            mac:
              imageName: 'macos-10.13'
            windows:
              imageName: 'vs2017-win2016'
        pool:
          vmImage: $(imageName)
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '11.x'
          displayName: 'Install Node.js'

        - task: CacheBeta@0
          inputs:
            key: yarn | $(Agent.OS) | $(RELATIVE_CACHE_FOLDER) | yarn.lock
            path: $(YARN_CACHE_FOLDER)
          displayName: Cache Yarn packages
        - bash: yarn
          displayName: Install dependencies
        - script: yarn run build
          displayName: Build extension
        - bash: yarn run test-only
          displayName: Run Tests
        - publish: artifacts/extension
          artifact: vscode-extension-$(Agent.OS)
          displayName: Publish extension artifact
        - bash: yarn run vscode:package-only
          condition: eq($(Agent.OS), 'linux')
          displayName: Package vscode extension
        - publish: artifacts/extension
          condition: eq($(Agent.OS), 'linux')
          artifact: vscode-extension
        - publish: artifacts/package
          condition: eq($(Agent.OS), 'linux')
          artifact: vscode-extension     