trigger:
- master

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

stages:
  - stage: build_test
    displayName: Build and Test
    jobs:
      - job: build
        displayName: Build on
        strategy:
          matrix:
            linux:
              imageName: 'ubuntu-16.04'
            mac:
              imageName: 'macos-10.13'
            windows:
              imageName: 'vs2017-win2016'
        pool:
          vmImage: $(imageName)
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '11.x'
          displayName: 'Install Node.js'

        - task: CacheBeta@0
          inputs:
            key: yarn | $(Agent.OS) | yarn.lock
            path: $(YARN_CACHE_FOLDER)
          displayName: Cache Yarn packages
        - bash: yarn --frozen-lockfile
          displayName: Install dependencies
        - script: yarn run build
          displayName: Build extension
      - job: test
        dependsOn: build
        displayName: Test on 
        strategy:
          matrix:
            linux:
              imageName: 'ubuntu-16.04'
            mac:
              imageName: 'macos-10.13'
            windows:
              imageName: 'vs2017-win2016'
        pool:
          vmImage: $(imageName)
        steps:
          - bash: yarn run test-only
            displayName: Run Tests
  - stage: artifacts
    dependsOn: build_test
    displayName: Package and publish artifacts
    jobs:
    - job: artifacts
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - bash: yarn run vscode:package
        displayName: Package vscode extension
        
      - task: PublishBuildArtifacts@1
        inputs:
          ArtifactName: vscode-extension
          PathtoPublish: artifacts/extension/
      - task: PublishBuildArtifacts@1
        inputs:
          ArtifactName: vscode-extension-package
          PathtoPublish: artifacts/package/